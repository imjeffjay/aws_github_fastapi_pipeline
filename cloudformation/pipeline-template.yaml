AWSTemplateFormatVersion: '2010-09-09'
Description: "CloudFormation template for FastAPI ECS pipeline setup with CodePipeline and CodeBuild."

Parameters:
  GitHubOAuthToken:
    Type: String
    Description: "GitHub OAuth token for accessing the repository"
  GitHubOwner:
    Type: String
    Description: "GitHub repository owner"
  GitHubRepo:
    Type: String
    Description: "GitHub repository name"
  DOCKERUSERNAME:
    Type: String
    Description: "Docker Hub username for authentication"
  DOCKERTOKEN:
    Type: String
    Description: "Docker Hub personal access token for authentication"
  AWSRegion:
    Type: String
    Default: "us-east-1"
    Description: "AWS Region"
  AWSAccountId:
    Type: String
    Description: "AWS Account ID"
  ECRRepoName:
    Type: String
    Default: "fastapi-app"
    Description: "ECR Repository Name"
  ClusterName:
    Type: String
    Default: "FastAPICluster"
    Description: "ECS Cluster Name"
  TaskFamily:
    Type: String
    Default: "fastapi-task"
    Description: "ECS Task Definition Family"
  ContainerName:
    Type: String
    Default: "fastapi-container"
    Description: "ECS Container Name"
  SubnetIds:
    Type: CommaDelimitedList
    Description: "List of Subnet IDs for ECS tasks"
  ProjectName:
    Type: String
    Default: "FastAPIBuildProject"
    Description: "CodeBuild Project Name"
  ArtifactBucketName:
    Type: String
    Description: "Artifact bucket for pipeline storage"
  CodePipelineRoleArn:
    Type: String
    Description: "ARN of the CodePipeline IAM Role"
  AuthType:
    Type: String
    Default: "PERSONAL_ACCESS_TOKEN"
    Description: "Authentication type for GitHub (e.g., PERSONAL_ACCESS_TOKEN)"
  Server:
    Type: String
    Default: "GitHub"
    Description: "The source control server (e.g., GitHub, Bitbucket)"

Resources:
  ECSTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Ref TaskFamily
      Cpu: "256"
      Memory: "512"
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref CodePipelineRoleArn
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub "${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/${ECRRepoName}:latest"
          Memory: 512
          Cpu: 256
          PortMappings:
            - ContainerPort: 8000

  # ECS Service
  ECSService:
    Type: "AWS::ECS::Service"
    Properties:
      Cluster: !Ref ClusterName
      DesiredCount: 1
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: "FARGATE"
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref SubnetIds
          AssignPublicIp: "ENABLED"

  # CodeBuild Project
  CodeBuildProject:
    Type: AWS::CodeBuild::Project
    Properties:
      Name: !Ref ProjectName
      Source:
        Type: GITHUB
        Location: !Sub "https://github.com/${GitHubOwner}/${GitHubRepo}.git"
        Auth:
          Type: OAUTH
          Resource: !Ref GitHubOAuthToken
      Environment:
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/standard:5.0
        PrivilegedMode: true
        Type: LINUX_CONTAINER
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref AWSRegion
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWSAccountId
          - Name: ECR_REPO_NAME
            Value: !Ref ECRRepoName
          - Name: GITHUB_TOKEN
            Value: !Ref GitHubOAuthToken
          - Name: GITHUB_OWNER
            Value: !Ref GitHubOwner
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
          - Name: AUTH_TYPE
            Value: !Ref AuthType
          - Name: DOCKERTOKEN
            Value: !Ref DOCKERTOKEN
          - Name: DOCKERUSERNAME
            Value: !Ref DOCKERUSERNAME
          - Name: SERVER
            Value: !Ref Server
      ServiceRole: !Ref CodePipelineRoleArn
      Artifacts:
        Type: NO_ARTIFACTS

  # CodePipeline
  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    Properties:
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: "Source"
          Actions:
            - Name: "Source"
              ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: "1"
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: "main"
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: "SourceOutput"
        - Name: "Build"
          Actions:
            - Name: "Build"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              InputArtifacts:
                - Name: "SourceOutput"
              OutputArtifacts:
                - Name: "BuildOutput"
              Configuration:
                ProjectName: !Ref ProjectName
        - Name: "Deploy"
          Actions:
            - Name: "Deploy"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "ECS"
                Version: "1"
              InputArtifacts:
                - Name: "BuildOutput"
              Configuration:
                ClusterName: !Ref ClusterName
                ServiceName: !Ref ECSService
                FileName: "imagedefinitions.json"

Outputs:
  PipelineName:
    Description: "The CodePipeline Name"
    Value: !Ref CodePipeline
  ClusterName:
    Description: "The ECS Cluster Name"
    Value: !Ref ClusterName
  TaskDefinition:
    Description: "The ECS Task Definition"
    Value: !Ref ECSTaskDefinition
