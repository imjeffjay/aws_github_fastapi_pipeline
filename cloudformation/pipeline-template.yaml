AWSTemplateFormatVersion: '2010-09-09'
Description: "CloudFormation template for FastAPI ECS pipeline setup with CodePipeline and CodeBuild."

Parameters:
  GitHubOAuthToken:
    Type: String
    Description: "GitHub OAuth token for accessing the repository"
  GitHubOwner:
    Type: String
    Description: "GitHub repository owner"
  GitHubRepo:
    Type: String
    Description: "GitHub repository name"
  DOCKERUSERNAME:
    Type: String
    Description: "Docker Hub username for authentication"
  DOCKERTOKEN:
    Type: String
    Description: "Docker Hub personal access token for authentication"
  AWSRegion:
    Type: String
    Description: "AWS Region"
  AWSAccountId:
    Type: String
    Description: "AWS Account ID"
  ECRRepoName:
    Type: String
    Description: "ECR Repository Name"
  ClusterName:
    Type: String
    Description: "ECS Cluster Name"
  TaskFamily:
    Type: String
    Description: "ECS Task Definition Family"
  ContainerName:
    Type: String
    Description: "ECS Container Name"
  SubnetIds:
    Type: CommaDelimitedList
    Description: "List of Subnet IDs for ECS tasks"
  ProjectName:
    Type: String
    Description: "CodeBuild Project Name"
  ArtifactBucketName:
    Type: String
    Description: "Artifact bucket for pipeline storage"
  CodePipelineRoleArn:
    Type: String
    Description: "ARN of the CodePipeline IAM Role"
  AuthType:
    Type: String
    Description: "Authentication type for GitHub (e.g., PERSONAL_ACCESS_TOKEN)"
  Server:
    Type: String
    Description: "The source control server (e.g., GitHub, Bitbucket)"

Resources:
  ECSTaskDefinition:
    Type: "AWS::ECS::TaskDefinition"
    Properties:
      Family: !Ref TaskFamily
      Cpu: "256"
      Memory: "512"
      RequiresCompatibilities:
        - FARGATE
      NetworkMode: awsvpc
      ExecutionRoleArn: !Ref CodePipelineRoleArn
      ContainerDefinitions:
        - Name: !Ref ContainerName
          Image: !Sub "${AWSAccountId}.dkr.ecr.${AWSRegion}.amazonaws.com/${ECRRepoName}:latest"
          Memory: 512
          Cpu: 256
          PortMappings:
            - ContainerPort: 8000

  ECSService:
    Type: "AWS::ECS::Service"
    Properties:
      ServiceName: !Sub "${ProjectName}-service"
      Cluster: !Ref ClusterName
      DesiredCount: 1
      TaskDefinition: !Ref ECSTaskDefinition
      LaunchType: "FARGATE"
      NetworkConfiguration:
        AwsvpcConfiguration:
          Subnets: !Ref SubnetIds
          AssignPublicIp: "ENABLED"
      DeploymentConfiguration:
        MaximumPercent: 200
        MinimumHealthyPercent: 100
      HealthCheckGracePeriodSeconds: 60
      EnableECSManagedTags: true
      EnableExecuteCommand: true
      PropagateTags: SERVICE

  CodePipeline:
    Type: "AWS::CodePipeline::Pipeline"
    DependsOn: ECSService
    Properties:
      RoleArn: !Ref CodePipelineRoleArn
      ArtifactStore:
        Type: S3
        Location: !Ref ArtifactBucketName
      Stages:
        - Name: "Source"
          Actions:
            - Name: "Source"
              ActionTypeId:
                Category: "Source"
                Owner: "ThirdParty"
                Provider: "GitHub"
                Version: "1"
              Configuration:
                Owner: !Ref GitHubOwner
                Repo: !Ref GitHubRepo
                Branch: "main"
                OAuthToken: !Ref GitHubOAuthToken
              OutputArtifacts:
                - Name: "SourceOutput"
        - Name: "Build"
          Actions:
            - Name: "Build"
              ActionTypeId:
                Category: "Build"
                Owner: "AWS"
                Provider: "CodeBuild"
                Version: "1"
              InputArtifacts:
                - Name: "SourceOutput"
              OutputArtifacts:
                - Name: "BuildOutput"
              Configuration:
                ProjectName: !Ref ProjectName
        - Name: "Deploy"
          Actions:
            - Name: "Deploy"
              ActionTypeId:
                Category: "Deploy"
                Owner: "AWS"
                Provider: "ECS"
                Version: "1"
              InputArtifacts:
                - Name: "BuildOutput"
              Configuration:
                ClusterName: !Ref ClusterName
                ServiceName: !Sub "${ProjectName}-service"
                FileName: "imagedefinitions.json"
              RunOrder: 1

  CodeBuildServiceRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: "2012-10-17"
        Statement:
          - Effect: "Allow"
            Principal:
              Service: "codebuild.amazonaws.com"
            Action: "sts:AssumeRole"
      ManagedPolicyArns:
        - "arn:aws:iam::aws:policy/AdministratorAccess"

  CodeBuildProject:
    Type: "AWS::CodeBuild::Project"
    Properties:
      Name: !Ref ProjectName
      ServiceRole: !GetAtt CodeBuildServiceRole.Arn
      Artifacts:
        Type: CODEPIPELINE
      Environment:
        Type: LINUX_CONTAINER
        ComputeType: BUILD_GENERAL1_SMALL
        Image: aws/codebuild/amazonlinux2-x86_64-standard:5.0
        EnvironmentVariables:
          - Name: AWS_REGION
            Value: !Ref AWSRegion
            Type: PLAINTEXT
          - Name: AWS_ACCOUNT_ID
            Value: !Ref AWSAccountId
            Type: PLAINTEXT
          - Name: ECR_REPO_NAME
            Value: !Ref ECRRepoName
            Type: PLAINTEXT
          - Name: CONTAINER_NAME
            Value: !Ref ContainerName
            Type: PLAINTEXT
          - Name: GITHUB_TOKEN
            Value: !Ref GitHubOAuthToken
            Type: PLAINTEXT
          - Name: GITHUB_OWNER
            Value: !Ref GitHubOwner
            Type: PLAINTEXT
          - Name: GITHUB_REPO
            Value: !Ref GitHubRepo
            Type: PLAINTEXT
          - Name: AUTH_TYPE
            Value: !Ref AuthType
            Type: PLAINTEXT
          - Name: DOCKERTOKEN
            Value: !Ref DOCKERTOKEN
            Type: PLAINTEXT
          - Name: DOCKERUSERNAME
            Value: !Ref DOCKERUSERNAME
            Type: PLAINTEXT
          - Name: SERVER
            Value: !Ref Server
            Type: PLAINTEXT

Outputs:
  PipelineName:
    Description: "The CodePipeline Name"
    Value: !Ref CodePipeline
  ClusterName:
    Description: "The ECS Cluster Name"
    Value: !Ref ClusterName
  TaskDefinition:
    Description: "The ECS Task Definition"
    Value: !Ref ECSTaskDefinition